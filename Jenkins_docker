pipeline {
    agent any

    environment {
        LOCAL_REGISTRY = "localhost:5000"
        MONGO_USERNAME = "ati"
        MONGO_PASSWORD = "ati1234"
    }

    stages {
        stage('Pull Latest Images') {
            steps {
                script {
                    sh '''
                    docker pull postgres:latest
                    docker pull redis:latest
                    docker pull mongo:latest
                    docker pull mongo-express:latest
                    '''
                }
            }
        }

        stage('Tag Images for Local Registry') {
            steps {
                script {
                    sh '''
                    docker tag postgres:latest ${LOCAL_REGISTRY}/postgres:latest
                    docker tag redis:latest ${LOCAL_REGISTRY}/redis:latest
                    docker tag mongo:latest ${LOCAL_REGISTRY}/mongo:latest
                    docker tag mongo-express:latest ${LOCAL_REGISTRY}/mongo-express:latest
                    '''
                }
            }
        }

        stage('Push Images to Local Registry') {
            steps {
                script {
                    sh '''
                    docker push ${LOCAL_REGISTRY}/postgres:latest
                    docker push ${LOCAL_REGISTRY}/redis:latest
                    docker push ${LOCAL_REGISTRY}/mongo:latest
                    docker push ${LOCAL_REGISTRY}/mongo-express:latest
                    '''
                }
            }
        }

        stage('Run Containers') {
            steps {
                script {
                    sh '''
                    docker network create my_network || true

                    docker run -d --name postgres --net my_network ${LOCAL_REGISTRY}/postgres:latest
                    docker run -d --name redis --net my_network ${LOCAL_REGISTRY}/redis:latest
                    docker run -d --name mongo -e MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME} -e MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD} --net my_network ${LOCAL_REGISTRY}/mongo:latest
                    docker run -d --name mongo-express -e ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME} -e ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD} -e ME_CONFIG_MONGODB_SERVER=mongo --net my_network -p 8081:8081 ${LOCAL_REGISTRY}/mongo-express:latest
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                echo "All containers are up and running."
                '''
            }
        }
    }
}
