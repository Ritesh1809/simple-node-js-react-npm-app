pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = "your-local-registry:5000"
        DOCKER_IMAGE_PREFIX = "your-local-registry:5000/"
        POSTGRES_IMAGE = "postgres"
        REDIS_IMAGE = "redis"
        MONGO_EXPRESS_IMAGE = "mongo-express"
        MONGO_IMAGE = "mongo"
        MONGO_EXPRESS_PORT = "8081"
        MONGO_PORT = "27017"
    }

    stages {
        stage('Pull and Tag Images') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', '1bf8757c-05f1-4e77-bcce-17da50759cd5') {
                        docker.image(POSTGRES_IMAGE).pull()
                        docker.image(REDIS_IMAGE).pull()
                        docker.image(MONGO_EXPRESS_IMAGE).pull()
                        docker.image(MONGO_IMAGE).pull()
                    }
                    docker.image("${DOCKER_IMAGE_PREFIX}${POSTGRES_IMAGE}").tag("${POSTGRES_IMAGE}:latest")
                    docker.image("${DOCKER_IMAGE_PREFIX}${REDIS_IMAGE}").tag("${REDIS_IMAGE}:latest")
                    docker.image("${DOCKER_IMAGE_PREFIX}${MONGO_EXPRESS_IMAGE}").tag("${MONGO_EXPRESS_IMAGE}:latest")
                    docker.image("${DOCKER_IMAGE_PREFIX}${MONGO_IMAGE}").tag("${MONGO_IMAGE}:latest")
                }
            }
        }

        stage('Build and Push Images') {
            steps {
                script {
                    docker.image("${POSTGRES_IMAGE}:latest").push("${DOCKER_IMAGE_PREFIX}${POSTGRES_IMAGE}:latest")
                    docker.image("${REDIS_IMAGE}:latest").push("${DOCKER_IMAGE_PREFIX}${REDIS_IMAGE}:latest")
                    docker.image("${MONGO_EXPRESS_IMAGE}:latest").push("${DOCKER_IMAGE_PREFIX}${MONGO_EXPRESS_IMAGE}:latest")
                    docker.image("${MONGO_IMAGE}:latest").push("${DOCKER_IMAGE_PREFIX}${MONGO_IMAGE}:latest")
                }
            }
        }
    }
}

